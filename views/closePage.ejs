<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Redirection</title>
    <style>
        body {
            text-align: center;
            font-family: 'Cairo', Arial, sans-serif;
        }

        .error {
            color: red;
        }

        #logContainer {
            margin-top: 20px;
            border: 1px solid #ccc;
            padding: 10px;
            max-height: 200px;
            overflow-y: auto;
        }
    </style>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="//connect.facebook.com/en_US/messenger.Extensions.js"></script>
    <script>
        async function sendTextMessage(senderPsid, text) {
            try {
                const response = await axios.post('/send-message', { senderPsid, text });
                console.log('Text message sent:', response.data);
            } catch (error) {
                console.error('Error sending text message:', error.message);
            }
        }

        window.extAsyncInit = function () {
            // Messenger Extensions JS SDK is done loading
            MessengerExtensions.getUserID(
                function success(uids) {
                    var psid = uids.psid;
                    alert(psid);
                    // Replace 'WEB_URL' with the actual URL you want to open
                    openLinkInMessengerWebview(psid, 'https://facebook-bot-demo-production.up.railway.app/close');
                },
                function error(err) {
                    alert("Messenger Extension Error: " + err);
                }
            );
        };

        async function openLinkInMessengerWebview(psid, link) {
            try {
                // Open the link within the Messenger webview
                MessengerExtensions.navigateTo(
                    psid,
                    link,
                    null,
                    function success() {
                        console.log('Successfully opened link in Messenger webview');
                    },
                    function error(err) {
                        console.error('Error opening link in Messenger webview:', err);
                    }
                );
            } catch (err) {
                console.error('An error occurred during the process:', err.message);
            }
        }

        function sendMessageAndClose(psid) {
            try {
                sendTextMessage(psid, 'Hello, this is a message from your website!')
                    .then(() => {
                        logMessage('Message sent successfully');
                        // Close the web browser
                        MessengerExtensions.requestCloseBrowser(
                            function success() {
                                logMessage('Web browser closed');
                            },
                            function error(err) {
                                logError('Error closing web browser: ' + err);
                            }
                        );
                    })
                    .catch((error) => {
                        logError('Error sending message: ' + error.message);
                    });

            } catch (err) {
                logError('An error occurred during the execution: ' + err.message);
            }
        }

        function logMessage(message) {
            var logContainer = document.getElementById('logContainer');
            var logEntry = document.createElement('div');
            logEntry.textContent = message;
            logContainer.appendChild(logEntry);
            logContainer.scrollTop = logContainer.scrollHeight;
        }

        function logError(error) {
            var errorContainer = document.querySelector('.error');
            var errorEntry = document.createElement('div');
            errorEntry.textContent = 'Error: ' + error;
            errorContainer.appendChild(errorEntry);
        }
    </script>
</head>

<body>
    <div class="error"></div>
    <div id="logContainer"></div>
    <p id="message"></p>
    <a id="link" target="_blank"></a>
</body>

</html>
